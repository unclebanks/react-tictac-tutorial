{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","wins","losses","i","this","slice","calculateWinner","setState","console","log","handleClick","status","winner","id","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sPAIA,SAASA,EAAOC,GACZ,OACA,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACKF,EAAMG,Q,IAKTC,E,kDACF,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,EACTC,KAAM,EACNC,OAAQ,GANG,E,+CASnB,SAAYC,GACR,IAAMN,EAAUO,KAAKR,MAAMC,QAAQQ,QACnC,IAAGR,EAAQM,GAAX,CAIA,GADAN,EAAQM,GAAKC,KAAKR,MAAMI,QAAU,IAAM,IACpCM,EAAgBT,GAOhB,OANAO,KAAKG,SAAS,CACVN,KAAMG,KAAKR,MAAMK,KAAK,EACtBJ,QAASC,MAAM,GAAGC,KAAK,aAG3BS,QAAQC,IAAIL,KAAKR,MAAMK,MAG3BG,KAAKG,SAAS,CACVV,QAASA,EACTG,SAAUI,KAAKR,MAAMI,a,0BAG7B,SAAaG,GAAI,IAAD,OACZ,OAAO,cAACb,EAAD,CAAQI,MAAOU,KAAKR,MAAMC,QAAQM,GAAIV,QAAS,kBAAM,EAAKiB,YAAYP,Q,oBAEjF,WACI,IACIQ,EADEC,EAASN,EAAgBF,KAAKR,MAAMC,SAQ1C,OALIc,EADAC,EACS,WAAaA,EAEf,iBAAmBR,KAAKR,MAAMI,QAAU,IAAM,KAIzD,sBAAKa,GAAG,iBAAR,UACI,qBAAKrB,UAAU,SAAf,SAAyBmB,IACzB,sBAAKnB,UAAU,YAAf,UACCY,KAAKU,aAAa,GAClBV,KAAKU,aAAa,GAClBV,KAAKU,aAAa,MAEnB,sBAAKtB,UAAU,YAAf,UACCY,KAAKU,aAAa,GAClBV,KAAKU,aAAa,GAClBV,KAAKU,aAAa,MAEnB,sBAAKtB,UAAU,YAAf,UACCY,KAAKU,aAAa,GAClBV,KAAKU,aAAa,GAClBV,KAAKU,aAAa,a,GA1DXC,IAAMC,WAiEpBC,E,4JACF,WACI,OACA,sBAAKzB,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACA,cAACG,EAAD,MAEA,sBAAKH,UAAU,YAAf,UACA,wBACA,iC,GATOuB,IAAMC,WAezB,SAASV,EAAgBT,GAWrB,IAVA,IAAMqB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAf,EAAI,EAAGA,EAAIe,EAAMC,OAAQhB,IAAK,CACrC,kBAAkBe,EAAMf,GAAxB,GAAOiB,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIzB,EAAQuB,IAAMvB,EAAQuB,KAAOvB,EAAQwB,IAAMxB,EAAQuB,KAAOvB,EAAQyB,GACpE,OAAOzB,EAAQuB,GAGnB,OAAO,KAKXG,IAASC,OACL,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.be526d0a.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n    </button>\r\n    );\r\n}\r\n  \r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true,\r\n            wins: 1,\r\n            losses: 0,\r\n        };\r\n    }\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if(squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        if (calculateWinner(squares)) {\r\n            this.setState({\r\n                wins: this.state.wins+1,\r\n                squares: Array(9).fill(null),\r\n            })\r\n            // window.reload();\r\n            console.log(this.state.wins);\r\n            return;\r\n        }\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n    renderSquare(i) {\r\n        return <Square value={this.state.squares[i]} onClick={() => this.handleClick(i)}/>;\r\n    }\r\n    render() {\r\n        const winner = calculateWinner(this.state.squares);\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n        <div id=\"boardContainer\">\r\n            <div className=\"status\">{status}</div>\r\n            <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n  \r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n            <Board />\r\n            </div>\r\n            <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  // ========================================\r\n  \r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n  "],"sourceRoot":""}