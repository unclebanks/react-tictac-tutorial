{"version":3,"sources":["components/NavBar.js","components/Square.js","components/Board.js","components/Settings.js","index.js"],"names":["NavBar","id","Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","wins","losses","i","this","slice","calculateWinner","setState","console","log","handleClick","status","winner","renderSquare","React","Component","lines","length","a","b","c","Settings","Game","ReactDOM","render","document","getElementById"],"mappings":"gSAGO,SAASA,IACZ,OACI,sBAAKC,GAAG,kBAAR,UACI,0CACA,0CACA,2CACA,8CACA,sBAAMA,GAAG,aAAT,oBACA,+C,WCTL,SAASC,EAAOC,GACnB,OACA,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACKF,EAAMG,QCFR,IAAMC,EAAb,kDACI,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,EACTC,KAAM,EACNC,OAAQ,GANG,EADvB,+CAUI,SAAYC,GACR,IAAMN,EAAUO,KAAKR,MAAMC,QAAQQ,QACnC,IAAGR,EAAQM,GAAX,CAIA,GADAN,EAAQM,GAAKC,KAAKR,MAAMI,QAAU,IAAM,IACpCM,EAAgBT,GAOhB,OANAO,KAAKG,SAAS,CACVN,KAAMG,KAAKR,MAAMK,KAAK,EACtBJ,QAASC,MAAM,GAAGC,KAAK,aAG3BS,QAAQC,IAAIL,KAAKR,MAAMK,MAG3BG,KAAKG,SAAS,CACVV,QAASA,EACTG,SAAUI,KAAKR,MAAMI,aA3BjC,0BA8BI,SAAaG,GAAI,IAAD,OACZ,OAAO,cAACb,EAAD,CAAQI,MAAOU,KAAKR,MAAMC,QAAQM,GAAIV,QAAS,kBAAM,EAAKiB,YAAYP,QA/BrF,oBAiCI,WACI,IACIQ,EADEC,EAASN,EAAgBF,KAAKR,MAAMC,SAQ1C,OALIc,EADAC,EACS,WAAaA,EAEf,iBAAmBR,KAAKR,MAAMI,QAAU,IAAM,KAIzD,sBAAKX,GAAG,iBAAR,UACI,qBAAKG,UAAU,SAAf,SAAyBmB,IACzB,sBAAKnB,UAAU,YAAf,UACCY,KAAKS,aAAa,GAClBT,KAAKS,aAAa,GAClBT,KAAKS,aAAa,MAEnB,sBAAKrB,UAAU,YAAf,UACCY,KAAKS,aAAa,GAClBT,KAAKS,aAAa,GAClBT,KAAKS,aAAa,MAEnB,sBAAKrB,UAAU,YAAf,UACCY,KAAKS,aAAa,GAClBT,KAAKS,aAAa,GAClBT,KAAKS,aAAa,aA1D/B,GAA2BC,IAAMC,WAgEjC,SAAST,EAAgBT,GAWrB,IAVA,IAAMmB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CACrC,kBAAkBa,EAAMb,GAAxB,GAAOe,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIvB,EAAQqB,IAAMrB,EAAQqB,KAAOrB,EAAQsB,IAAMtB,EAAQqB,KAAOrB,EAAQuB,GACpE,OAAOvB,EAAQqB,GAGnB,OAAO,K,MCjFJ,SAASG,IACZ,OACI,qBAAKhC,GAAG,oBAAR,SACI,iCACI,+C,ICAViC,E,4JACF,WACI,OACA,sBAAK9B,UAAU,OAAf,UACI,cAACJ,EAAD,IACA,qBAAKI,UAAU,aAAf,SACA,cAAC,EAAD,MAEA,cAAC6B,EAAD,W,GAROP,IAAMC,WAgBzBQ,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3240e2ea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../styles/navbar.css';\r\n\r\nexport function NavBar() {\r\n    return(\r\n        <div id=\"navbarContainer\">\r\n            <button>Load</button>\r\n            <button>Save</button>\r\n            <button>Clear</button>\r\n            <button>Settings</button>\r\n            <span id=\"playerWins\">Wins: </span>\r\n            <span>Losses: </span>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Square(props) {\r\n    return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n    </button>\r\n    );\r\n}"," import React from \"react\";\r\n import { Square } from \"./Square\";\r\n\r\nexport class Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true,\r\n            wins: 1,\r\n            losses: 0,\r\n        };\r\n    }\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if(squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        if (calculateWinner(squares)) {\r\n            this.setState({\r\n                wins: this.state.wins+1,\r\n                squares: Array(9).fill(null),\r\n            })\r\n            // window.reload();\r\n            console.log(this.state.wins);\r\n            return;\r\n        }\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n    renderSquare(i) {\r\n        return <Square value={this.state.squares[i]} onClick={() => this.handleClick(i)}/>;\r\n    }\r\n    render() {\r\n        const winner = calculateWinner(this.state.squares);\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n        <div id=\"boardContainer\">\r\n            <div className=\"status\">{status}</div>\r\n            <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }","import React from \"react\";\r\nimport '../styles/settings.css';\r\n\r\nexport function Settings() {\r\n    return(\r\n        <div id=\"settingsContainer\">\r\n            <select>\r\n                <option>Black</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { NavBar } from './components/NavBar';\r\nimport { Board } from './components/Board';  \r\nimport { Settings } from './components/Settings';\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n        <div className=\"game\">\r\n            <NavBar />\r\n            <div className=\"game-board\">\r\n            <Board />\r\n            </div>\r\n            <Settings />\r\n        </div>\r\n        );\r\n    }\r\n}\r\n  \r\n  // ========================================\r\n  \r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n  "],"sourceRoot":""}